variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  DOCKER_TLS_CERTDIR: '/certs'

before_script:
  - echo "@1win:registry=https://fbet-gitlab.ex2b.co/api/v4/projects/1306/packages/npm/" > .npmrc
  - echo "//fbet-gitlab.ex2b.co/api/v4/projects/1306/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
  - apt-get update -y && apt-get install -yqqf openssh-client git unzip sshpass rsync --fix-missing
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY_TOOLKIT" | tr -d '\r' | ssh-add - > /dev/null

  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - ssh-keyscan $CI_SERVER_HOST >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  - git config --global user.email "auto-changelog"
  - git config --global user.name "Gitlab"

stages:
  - changelog
  - analyze
  - test
  - build

linter:
  stage: analyze
  allow_failure: false
  image: node
  script:
    - npm install
    - npm run lint

formatter:
  stage: analyze
  allow_failure: false
  image: node
  script:
    - npm install
    - npm run format

test:
  stage: test
  allow_failure: false
  image: node
  script:
    - npm install
    - npm run test

build:
  stage: build
  allow_failure: false
  except:
    - tags
  image: node
  script:
    - npm install
    - npm run build

build-push-docker-image-job:
  image: docker:stable
  stage: build
  before_script: []
  only:
    - tags
  # Specify an additional image 'docker:dind' ("Docker-in-Docker") that
  # will start up the Docker daemon when it is brought up by a runner.
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --no-cache --build-arg NPM_TOKEN=${NPM_TOKEN} -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

changelog:
  stage: changelog
  image: node:18
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_MESSAGE !~ /Changelog auto-update/'
  script:
    - git remote rm origin && git remote add origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    - COMMIT_SHA=$CI_COMMIT_SHA CI_API_V4_URL=$CI_API_V4_URL CI_PROJECT_ID=$CI_PROJECT_ID GITLAB_PROJECT_ACCESS_TOKEN=$GITLAB_PROJECT_ACCESS_TOKEN CI_DEFAULT_BRANCH=$CI_DEFAULT_BRANCH node ./.gitlab/scripts/gitlab-changelog

tagfixed:
  stage: changelog
  image: node:18
  rules:
    - if: '$CI_COMMIT_TAG && $CI_PIPELINE_SOURCE == "push"'
  script:
    - git remote rm origin && git remote add origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    - CI_COMMIT_TAG=$CI_COMMIT_TAG CI_API_V4_URL=$CI_API_V4_URL CI_PROJECT_ID=$CI_PROJECT_ID GITLAB_PROJECT_ACCESS_TOKEN=$GITLAB_PROJECT_ACCESS_TOKEN CI_DEFAULT_BRANCH=$CI_DEFAULT_BRANCH node ./.gitlab/scripts/gitlab-changelog